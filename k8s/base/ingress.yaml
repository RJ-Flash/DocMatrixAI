apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docmatrix-api
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      add_header X-Frame-Options "DENY" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), battery=(), ambient-light-sensor=()";
      add_header Cross-Origin-Resource-Policy "same-origin" always;
      add_header Cross-Origin-Opener-Policy "same-origin" always;
      add_header Cross-Origin-Embedder-Policy "require-corp" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'nonce-${REQUEST_ID}'; style-src 'self'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; require-trusted-types-for 'script'; upgrade-insecure-requests;" always;
spec:
  tls:
  - secretName: docmatrix-tls
    hosts:
    - api.docmatrix.ai
  rules:
  - host: api.docmatrix.ai
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: docmatrix-api
            port:
              number: 80 