apiVersion: apps/v1
kind: Deployment
metadata:
  name: expense-doc-api
  labels:
    app: expense-doc
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: expense-doc
      component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: expense-doc
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        checksum/config: ${CONFIG_CHECKSUM}
    spec:
      priorityClassName: expense-doc-api-priority
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: expense-doc
                  component: api
              topologyKey: "kubernetes.io/hostname"
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchLabels:
                  app: expense-doc
                  component: api
              topologyKey: "topology.kubernetes.io/zone"
      containers:
      - name: api
        image: ghcr.io/docmatrix/expense-doc:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: expense-doc-config
              key: db_host
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: expense-doc-config
              key: db_port
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: expense-doc-config
              key: db_name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: expense-doc-secrets
              key: db_user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: expense-doc-secrets
              key: db_password
        - name: REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: expense-doc-config
              key: redis_url
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: expense-doc-secrets
              key: openai_api_key
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: expense-doc-secrets
              key: jwt_secret
        resources:
          limits:
            cpu: "1"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        startupProbe:
          httpGet:
            path: /health
            port: http
          failureThreshold: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 30 